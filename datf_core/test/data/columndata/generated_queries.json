{
    "sourcequery": [
        "readdatadf=spark.read.format('parquet').load('datf_core/test/data/source/patients_source_parquet')",
        "readdatadf.createOrReplaceTempView('dataview')",
        "spark.sql(\"SELECT src.ADDRESS as ADDRESS, src.BIRTHDATE as BIRTHDATE, src.BIRTHPLACE as BIRTHPLACE, src.CITY as CITY, src.COUNTY as COUNTY, src.DEATHDATE as DEATHDATE, src.DRIVERS as DRIVERS, src.ETHNICITY as ETHNICITY, src.FIRST as FIRST, src.GENDER as GENDER, src.HEALTHCARE_COVERAGE as HEALTHCARE_COVERAGE, src.HEALTHCARE_EXPENSES as HEALTHCARE_EXPENSES, src.LAST as LAST, src.LAT as LAT, src.LON as LON, src.MAIDEN as MAIDEN, src.MARITAL as MARITAL, src.PASSPORT as PASSPORT, src.PREFIX as PREFIX, src.RACE as RACE, src.SSN as SSN, src.STATE as STATE, src.SUFFIX as SUFFIX, src.ZIP as ZIP, src.id as id FROM dataview src  \")",
        ""
    ],
    "targetquery": [
        "readdatadf=spark.read.format('parquet').load('datf_core/test/data/target/patients_target_parquet_mismatch')",
        "readdatadf.createOrReplaceTempView('dataview')",
        "spark.sql(\"SELECT ADDRESS, BIRTHDATE, BIRTHPLACE, CITY, COUNTY, DEATHDATE, DRIVERS, ETHNICITY, FIRST, GENDER, HEALTHCARE_COVERAGE, HEALTHCARE_EXPENSES, LAST, LAT, LON, MAIDEN, MARITAL, PASSPORT, PREFIX, RACE, SSN, STATE, SUFFIX, ZIP, id FROM dataview tgt \")",
        ""
    ]
}